#!/usr/bin/make -f

include /usr/share/cdbs/1/rules/debhelper.mk
include /usr/share/cdbs/1/class/autotools.mk
include /usr/share/cdbs/1/class/python-module.mk

include /usr/share/cdbs/1/rules/autoreconf.mk

export DH_OPTIONS

# This is the debhelper compatibility version to use.
# JIM: 10+ enables parallel builds by default
export DH_COMPAT=10

# We cannot call autoreconf -f -i as it updates INSTALL which is used for doc
# generation
DEB_DH_AUTORECONF_ARGS = --as-needed

DEB_HOST_ARCH_OS := $(shell dpkg-architecture -qDEB_HOST_ARCH_OS 2>/dev/null)

# echoed fallbacks are for Ubuntu primarily
systemdsystemunitdir := $(shell pkg-config --variable=systemdsystemunitdir systemd || echo /lib/systemd/system)
systemdsystemdutildir := $(shell pkg-config --variable=systemdutildir systemd || echo /lib/systemd)
systemdshutdowndir := $(shell pkg-config --variable=systemdshutdowndir systemd || echo /lib/systemd/system-shutdown)

# Newer systems have just /run (and yet newer systemd noisily suggests it)
runbasedir := $(shell test -d /run && echo /run || echo /var/run)

# FIXME: Find a smarter way to set those from main codebase recipes...
# Something like `grep 'version-info' **/Makefile.am` ?
SO_MAJOR_LIBUPSCLIENT=5
SO_MAJOR_LIBNUTCLIENT=1
SO_MAJOR_LIBNUTSCAN=1

# List any files which are not installed
include /usr/share/cdbs/1/rules/utils.mk
common-binary-post-install-arch:: list-missing

DEB_LDFLAGS_MAINT_APPEND=-Wl,-z,defs -Wl,-O1 -Wl,--as-needed
include /usr/share/dpkg/buildflags.mk

DEB_CONFIGURE_PREFIX      :=
DEB_CONFIGURE_SYSCONFDIR  := /etc/nut
DEB_CONFIGURE_INCLUDEDIR  := /usr/include
DEB_CONFIGURE_MANDIR      := /usr/share/man
DEB_CONFIGURE_EXTRA_FLAGS := --libdir=\$${prefix}/lib/$(DEB_HOST_MULTIARCH) \
			     --with-ssl --with-openssl --with-libltdl=yes \
			     --with-cgi=auto --with-powerman=auto \
			     --with-serial --with-usb --with-snmp --with-neon --with-ipmi \
			     --with-snmp_dmf_lua=yes \
			     --with-dmfsnmp-regenerate=no --with-dmfnutscan-regenerate=no --with-dmfsnmp-validate=no --with-dmfnutscan-validate=no \
			     --with-dev \
			     --disable-static \
			     --with-statepath=$(runbasedir)/nut \
			     --with-altpidpath=$(runbasedir)/nut \
			     --with-drvpath=/lib/nut \
			     --with-cgipath=/usr/lib/cgi-bin/nut \
			     --with-htmlpath=/usr/share/nut/www \
			     --with-pidpath=$(runbasedir)/nut \
			     --datadir=/usr/share/nut \
			     --with-pkgconfig-dir=/usr/lib/$(DEB_HOST_MULTIARCH)/pkgconfig \
			     --with-user=nut --with-group=nut

ifeq (linux,$(DEB_HOST_ARCH_OS))
  DEB_CONFIGURE_EXTRA_FLAGS+=--with-udev-dir=/lib/udev
###  DEB_CONFIGURE_EXTRA_FLAGS+=--with-systemdsystemunitdir
###  DEB_CONFIGURE_EXTRA_FLAGS+=--with-systemdsystemunitdir=/lib/systemd/system
  DEB_CONFIGURE_EXTRA_FLAGS+=--with-systemdsystemunitdir=$(systemdsystemunitdir)
  DEB_CONFIGURE_EXTRA_FLAGS+=--with-systemdshutdowndir=$(systemdshutdowndir)
endif

# only build documentation if asciidoc is installed
#ifneq ($(shell which asciidoc),)
#  DEB_CONFIGURE_EXTRA_FLAGS+=--with-doc=html-chunked,pdf
#else
#  DEB_CONFIGURE_EXTRA_FLAGS+=--with-doc=skip
#endif

# Try to use dist'ed docs if available, fall back to auto in other cases
DEB_CONFIGURE_EXTRA_FLAGS+=--with-doc=man=dist-auto

configure: configure.ac
	(cd tools; python nut-snmpinfo.py)
	sh autogen.sh

pre-build:: debian/compat configure

# FIXME : The recipe below is a crime scene regarding hardcoded paths that
# are more or less relevant for a particular OS distribution and version,
# and for certain nearby packages that are impacted by this, as was relevant
# at the time this recipe was written. Maybe more proper make macros can be
# used to rectify paths below and allow better manageable per-distro builds.
common-install-arch::
	# prepare debian packaging files
	mkdir -p $(CURDIR)/debian
	for F in debian.nut-client.init debian.nut-common.postinst debian.nut-common.prerm debian.nut-server.init debian.nut-server.prerm debian.nut-common.tmpfiles ; do \
		echo "  SED    $F.in => $F" ; \
		sed 's,@runbasedir[@],$(runbasedir),g' < "$(CURDIR)/obs/$$F.in" > $(CURDIR)/debian/"$$F" || exit ; \
	done

	# install the bash completion script
	mkdir -p $(CURDIR)/debian/tmp/usr/share/bash-completion/completions/
	cp $(CURDIR)/scripts/misc/nut.bash_completion \
		$(CURDIR)/debian/tmp/usr/share/bash-completion/completions/nut

	# install the avahi service file
	mkdir -p $(CURDIR)/debian/tmp/etc/avahi/services
	cp $(CURDIR)/scripts/avahi/nut.service \
		$(CURDIR)/debian/tmp/etc/avahi/services

	# install Augeas lenses
	mkdir -p $(CURDIR)/debian/tmp/usr/share/augeas/lenses/dist/tests
	cp $(CURDIR)/scripts/augeas/*.aug \
		$(CURDIR)/debian/tmp/usr/share/augeas/lenses/dist/
	cp $(CURDIR)/scripts/augeas/tests/test_nut.aug \
		$(CURDIR)/debian/tmp/usr/share/augeas/lenses/dist/tests/

	# install the default configuration
	for f in $(CURDIR)/debian/tmp/etc/nut/*; do           \
		nf=`basename $${f} | sed 's/\(.*\).sample/\1/'`;  \
		mv $${f} $(CURDIR)/debian/tmp/etc/nut/$${nf};  \
	done

	# Move -dev file to /usr; make sure wanted SONAMES exist (numbers unchanged)
	rm -f $(CURDIR)/debian/tmp/lib/$(DEB_HOST_MULTIARCH)/libupsclient.so
	test -s $(CURDIR)/debian/tmp/lib/$(DEB_HOST_MULTIARCH)/libupsclient.so.$(SO_MAJOR_LIBUPSCLIENT) && \
	ln -s /lib/$(DEB_HOST_MULTIARCH)/libupsclient.so.$(SO_MAJOR_LIBUPSCLIENT) \
		$(CURDIR)/debian/tmp/usr/lib/$(DEB_HOST_MULTIARCH)/libupsclient.so
	rm -f $(CURDIR)/debian/tmp/lib/$(DEB_HOST_MULTIARCH)/libnutclient.so
	test -s $(CURDIR)/debian/tmp/lib/$(DEB_HOST_MULTIARCH)/libnutclient.so.$(SO_MAJOR_LIBNUTCLIENT) && \
	ln -s /lib/$(DEB_HOST_MULTIARCH)/libnutclient.so.$(SO_MAJOR_LIBNUTCLIENT) \
		$(CURDIR)/debian/tmp/usr/lib/$(DEB_HOST_MULTIARCH)/libnutclient.so
	rm -f $(CURDIR)/debian/tmp/lib/$(DEB_HOST_MULTIARCH)/libnutscan.so
	test -s $(CURDIR)/debian/tmp/lib/$(DEB_HOST_MULTIARCH)/libnutscan.so.$(SO_MAJOR_LIBNUTSCAN) && \
	ln -s /lib/$(DEB_HOST_MULTIARCH)/libnutscan.so.$(SO_MAJOR_LIBNUTSCAN) \
		$(CURDIR)/debian/tmp/usr/lib/$(DEB_HOST_MULTIARCH)/libnutscan.so

	# Install systemd files only on systems where it's supported
	### Package files for nut-client:
	install -m 644 -D $(CURDIR)/debian/tmp/$(systemdsystemunitdir)/nut-monitor.service \
		$(CURDIR)/debian/nut-client/$(systemdsystemunitdir)/nut-monitor.service
	### Package files for nut-server:
	install -D $(CURDIR)/debian/tmp/$(systemdshutdowndir)/nutshutdown \
		$(CURDIR)/debian/nut-server/$(systemdshutdowndir)/nutshutdown
	install -m 644 -D $(CURDIR)/debian/tmp/$(systemdsystemunitdir)/nut-server.service \
		$(CURDIR)/debian/nut-server/$(systemdsystemunitdir)/nut-server.service
	# This should cover nut-driver.target, nut-driver@.service,
	# nut-driver-enumerator.path, nut-driver-enumerator.service
	install -m 644 -t $(CURDIR)/debian/nut-server/$(systemdsystemunitdir) \
		$(CURDIR)/debian/tmp/$(systemdsystemunitdir)/nut-driver*

	# Add a symlink to mask the LSB initscript for nut-client:
	ln -s nut-monitor.service $(CURDIR)/debian/nut-client/$(systemdsystemunitdir)/nut-client.service

	# Install tmpfiles config file to create /run/nut directory
	install -m 644 -D $(CURDIR)/debian/nut-common.tmpfiles \
		$(CURDIR)/debian/nut-common/usr/lib/tmpfiles.d/nut-common.conf

	# Install gen-snmp-subdriver.sh for nut-snmp
	install -m 755 -D $(CURDIR)/scripts/subdriver/gen-snmp-subdriver.sh \
		$(CURDIR)/debian/tmp/usr/sbin/gen-snmp-subdriver.sh

extradocs-install:
	#install documentation
	mkdir -p $(CURDIR)/debian/tmp/usr/share/doc/nut-doc/pdf
	mkdir -p $(CURDIR)/debian/tmp/usr/share/doc/nut-doc/html
	cp $(CURDIR)/docs/*.pdf $(CURDIR)/debian/tmp/usr/share/doc/nut-doc/pdf
	cp $(CURDIR)/docs/FAQ.html $(CURDIR)/debian/tmp/usr/share/doc/nut-doc/html

	for f in $(CURDIR)/docs/*.chunked/; do \
		nf=`basename $${f} | sed 's/\(.*\)\.chunked/\1/'`; \
		cp -a $${f} $(CURDIR)/debian/tmp/usr/share/doc/nut-doc/html/$${nf}/; \
	done

#common-install-indep:: extradocs-install
common-install-indep::
	# Make sure this exists for packaging to be consistent
	mkdir -p $(CURDIR)/debian/tmp/usr/share/doc/nut-doc

binary-install/nut-monitor::
	dh_python2 -pnut-monitor

DEB_DH_INSTALLINIT_ARGS_nut-server := --init-script=nut-server --restart-after-upgrade
DEB_DH_INSTALLINIT_ARGS_nut-client := --init-script=nut-client --restart-after-upgrade
DEB_DH_SYSTEMD_START_ARGS_nut-server := --restart-after-upgrade
DEB_DH_SYSTEMD_START_ARGS_nut-client := --restart-after-upgrade
DEB_DH_COMPRESS_ARGS_nut-doc := -X.pdf

ifeq (linux,$(DEB_HOST_ARCH_OS))
# for Debian
  DEB_DH_GENCONTROL_ARGS := -- -Vudev="udev (>= 0.124-1)"
# for Ubuntu
# DEB_DH_GENCONTROL_ARGS := -- -Vudev="udev (>= 136-1)"
endif

all check dist distcheck install:
	dh $@ --parallel
